{"hidden":false,"children":[{"configs":{"itemId":"module"},"expanded":true,"children":[{"configs":{"quoted":"true","itemId":"text","js":"//*** 比较经典的数据库访问代码片断 ***\nvar statement, connection = DbUtil.getConnection( /*jndi，缺省表示默认数据库，获取一个新的连接*/ );\n//var conn=DbUtil.getConnection(request); //获取本次请求共享的连接，使用该方法获取的连接系统会在请求结束后自动释放\ntry {\n  connection.setAutoCommit(false);\n  statement = connection.prepareStatement('update WB_MISC set INT_FIELD=123 where 1=0');\n  statement.executeUpdate();\n  //其它快速获取结果集数据的方法：\n  //var array = Wb.getRecords(resultSet);//读取结果集所有记录数据至Array\n  //var array = app.getRecords(sql);//读取sql生成的结果集所有记录数据至Array\n  //var object = Wb.getRecord(resultSet);//读取结果集当前行记录至Object\n  //var object = app.getRecord(sql);//读取sql生成的结果集首行记录至Object\n  //var javaJsonArray = DbUtil.getData(resultSet, keys, dictTableNames); //读取结果集所有记录数据至JSONArray\n  //var resultArray = app.getData('select * from WB_REPORT_DEMO order by ROW_NUM');//使用dataprovider生成数据Array\n  //var script = app.output(sql, config);//使用dataprovider获得结果集生成的脚本\n  //var javaJsonArray = DbUtil.getArray(resultSet); //读取结果集首个字段的所有记录值到JSONArray对象中\n  //其他业务代码\n  connection.commit();\n} catch (e) {\n  //异常情况需要处理的代码\n  throw e;\n} finally {\n  //DbUtil.close(resultSet);\n  DbUtil.close(statement);\n  DbUtil.close(connection); //该方法会自动回滚事务（如果未显式提交）并关闭连接\n}\n//在WebBuilder中可以使用query, dataprovider, updater等控件来访问数据库，或使用对应的app.run, app.output或app.update方法来访问数据库\n//如果使用上述控件或方法来访问数据库，请注意用到的数据库资源会在请求结束后自动释放\n//不要把app.run, app.output或app.update等方法放到较大的循环内执行（因为资源要到请求结束后释放，除非在每次循环后手动释放相关数据库资源）\n//批量的数据库访问可以使用批处理的方法"},"expanded":false,"children":[],"type":"string"},{"configs":{"layout":"fit","itemId":"viewport1"},"expanded":true,"children":[{"configs":{"itemId":"xwl1","file":"m?xwl=sys/tool/dev/script-editor","params":"{\n  readOnly: true\n}"},"expanded":false,"children":[],"type":"xwl"}],"type":"viewport","events":{"afterrender":"app.xwl1.setValue(\"{#text#}\");"}}],"type":"module"}],"roles":{},"title":"访问数据库","iconCls":"","inframe":false,"pageLink":""}