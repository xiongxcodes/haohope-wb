{"hidden":false,"children":[{"configs":{"itemId":"module"},"expanded":true,"children":[{"configs":{"quoted":"true","itemId":"text","js":"//请注意以下所有的字段名称和参数名称均区别大小写\n//添加记录\nvar id = SysUtil.getId(),\n  data = {\n    ID_FIELD: id,\n    STRING_FIELD: 'abc',\n    INT_FIELD: 123,\n    DOUBLE_FIELD: 456.7,\n    BOOL_FIELD: true,\n    DATETIME_FIELD: new JavaDate(),\n    CLOB_FIELD: 'clob'\n      //BLOB_FIELD: inputStream //可以为InputStream类型\n  };\napp.set(data); //设置参数，也可以来自客户端提交的参数\napp.update({\n  tableName: 'WB_MISC', //更新的表名\n  mode: 'insert' //使用添加模式\n});\n//------------------------------------------------------------------\n//修改记录\ndata = {\n  ID_FIELD: SysUtil.getId(),\n  STRING_FIELD: 'def',\n  INT_FIELD: 456,\n  DOUBLE_FIELD: 789.1,\n  BOOL_FIELD: false,\n  DATETIME_FIELD: new JavaDate(),\n  CLOB_FIELD: 'clob',\n  \"#ID_FIELD\": id //要修改的记录相关字段原值\n};\napp.set(data);\napp.update({\n  tableName: 'WB_MISC',\n  mode: 'update', //使用修改模式\n  whereFields: 'ID_FIELD'\n    //设置where语句所使用的字段列表，多个字段使用逗号分隔，比如field1,field2,field3\n    //如果不设置whereFields，系统尝试使用数据中的所有有效字段生成SQL语句的where部分\n    //如果数据中包含完整的要修改的记录所有相关字段的原值，无需设置whereFields\n});\n//------------------------------------------------------------------\n//删除记录\ndata = {\n  \"#ID_FIELD\": id //要删除的记录相关字段原值\n};\napp.set(data);\napp.update({\n  tableName: 'WB_MISC',\n  mode: 'delete', //使用删除模式\n  whereFields: 'ID_FIELD'\n});\n//------------------------------------------------------------------\n//批量增删改处理\n//批量处理时默认处理的所有字段为destroy, update, create参数首条记录中所有的字段并集，可以设置useFields属性来手动指定\ndata = {\n  destroy: [{ //删除的记录列表\n    \"#ID_FIELD\": id\n  }],\n  update: [{ //修改的记录列表\n    ID_FIELD: SysUtil.getId(),\n    STRING_FIELD: 'aa',\n    //INT_FIELD: 123,\n    //注意由于INT_FIELD为默认处理的字段（create项中存在INT_FIELD字段），因此缺省INT_FIELD将设置为null，其他缺省的字段值（如DOUBLE_FIELD）则不会改变\n    \"#ID_FIELD\": id //要修改的记录相关字段原值\n  }],\n  create: [{ //添加的记录列表\n    ID_FIELD: SysUtil.getId(),\n    STRING_FIELD: 'xyz',\n    INT_FIELD: 123\n  }, {\n    ID_FIELD: SysUtil.getId(),\n    STRING_FIELD: 'abc'\n  }]\n};\napp.set(Wb.reverse(data)); //update方法中的数据为JSONObject/JSONArray类型，使用Wb.reverse把JS的JSON类型转换为Java的JSON类型\napp.update({\n  tableName: 'WB_MISC',\n  whereFields: 'ID_FIELD' //如果更新的数据中新值和原值完整，此项可省略\n});"},"expanded":false,"children":[],"type":"string"},{"configs":{"layout":"fit","itemId":"viewport1"},"expanded":true,"children":[{"configs":{"itemId":"xwl1","file":"m?xwl=sys/tool/dev/script-editor"},"expanded":false,"children":[],"type":"xwl"}],"type":"viewport","events":{"afterrender":"app.xwl1.setValue(\"{#text#}\", null, true);"}}],"type":"module"}],"roles":{},"title":"使用updater","iconCls":"","inframe":false,"pageLink":""}