{"hidden":false,"children":[{"configs":{"itemId":"module"},"expanded":true,"children":[{"configs":{"layout":"border","itemId":"viewport1"},"expanded":true,"children":[{"configs":{"itemId":"toolbar1","region":"north"},"expanded":true,"children":[{"configs":{"itemId":"addFolderBtn","handler":"app.addFolder","tooltip":"在当前分支添加新的目录","text":"添加目录","iconCls":"folder_add_icon"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"editFolderBtn","handler":"app.editFolder","tooltip":"修改当前选择的目录","text":"修改目录","iconCls":"folder_edit_icon"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"delFolderBtn","handler":"app.delFolder","tooltip":"删除当前选择的目录","text":"删除目录","iconCls":"folder_delete_icon"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"item1","text":"-"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"addVarBtn","tooltip":"在当前分支添加新的变量 (Ctrl+E)","text":"添加变量","iconCls":"record_add_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.setVar(null, true);"}},{"configs":{"itemId":"delVarBtn","handler":"app.delVar","tooltip":"删除当前选择的变量","text":"删除变量","iconCls":"record_delete_icon"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"setVarBtn","tooltip":"设置选择变量的值","text":"设置变量","iconCls":"property_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.setVar();"}},{"configs":{"itemId":"refreshVarBtn","tooltip":"刷新当前变量列表","text":"刷新变量","iconCls":"refresh_icon"},"expanded":true,"children":[],"type":"item","events":{"click":"app.grid1.store.reload();"}},{"configs":{"itemId":"item2","text":"-"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"pathText","flex":"1","readOnly":"true","selectOnFocus":"true"},"expanded":false,"children":[],"type":"text"}],"type":"toolbar"},{"configs":{"itemId":"tree1","split":"true","width":"240","region":"west","title":"变量目录","tools":"Wb.getTreeTools({search:true})","rootVisible":"false"},"expanded":true,"children":[{"configs":{"itemId":"store","sorters":"{\n  property: 'text'\n}","url":"m?xwl=dev/var/get-tree"},"expanded":false,"children":[],"type":"treestore","events":{"success":"Wb.selFirst(node.getOwnerTree());"}}],"type":"tree","events":{"selectionchange":"var node = selected[0];\nif (node)\n  app.list(app.getPath(node));"}},{"configs":{"itemId":"grid1","pagingBar":"false","region":"center","title":"变量列表","multiSelect":"true"},"expanded":true,"children":[{"configs":{"itemId":"store","sorters":"{\n  property: 'name'\n}","fields":"['name','value','remark','meta']","url":"m?xwl=dev/var/get-vars"},"expanded":false,"children":[],"type":"store"},{"configs":{"itemId":"columns"},"expanded":true,"children":[{"configs":{"itemId":"numCol","xtype":"rownumberer"},"expanded":false,"children":[],"type":"column"},{"configs":{"itemId":"nameCol","dataIndex":"name","width":"150","text":"名称"},"expanded":false,"children":[],"type":"column"},{"configs":{"itemId":"valueCol","dataIndex":"value","width":"230","text":"值"},"expanded":false,"children":[],"type":"column"},{"configs":{"itemId":"remarkCol","dataIndex":"remark","flex":"1","text":"说明"},"expanded":true,"children":[],"type":"column"}],"type":"array"}],"type":"grid","events":{"selectionchange":"var rec = selected[0];\napp.pathText.setValue(rec ? app.listPath + '.' + rec.get('name') : '');","itemdblclick":"app.setVar(record, false);"}}],"type":"viewport","events":{"afterrender":"app.navKey = new Ext.KeyNav({\n  viewport: app.viewport1,\n  E: {\n    ctrl: true,\n    fn: function() {\n      app.addVarBtn.fireEvent('click');\n    }\n  }\n});"}}],"type":"module","events":{"initialize":"Wb.apply(app, {\n  //获取节点路径\n  getPath: function(node) {\n    return node.getPath('text', '.').substring(6);\n  },\n  addFolder: function() {\n    var node = app.tree1.getSelection()[0],\n      path;\n    if (!node) {\n      Wb.warn('请选择变量目录。');\n      return;\n    }\n    path = app.getPath(node);\n    Wb.prompt({\n      title: '添加目录 - ' + path,\n      iconCls: 'folder_add_icon',\n      items: [{\n        fieldLabel: '名称',\n        itemId: 'name',\n        allowBlank: false\n      }, {\n        boxLabel: '插入到同级节点',\n        hideEmptyLabel: false,\n        saveKeyname: 'sys.admin.var.insertCheck', //下次打开对话框时还原该值\n        itemId: 'check',\n        xtype: 'checkbox'\n      }],\n      handler: function(values, win) {\n        var baseNode;\n        if (values.check)\n          baseNode = node.parentNode;\n        else baseNode = node;\n        Wb.request({\n          url: 'm?xwl=dev/var/set-folder',\n          params: Ext.apply({\n            type: 'add',\n            isNew: true,\n            path: app.getPath(baseNode)\n          }, values),\n          success: function(resp) {\n            Wb.append({\n              text: values.name,\n              children: []\n            }, baseNode);\n            baseNode.sort();\n            win.close();\n          }\n        });\n      }\n    });\n  },\n  editFolder: function() {\n    var node = app.tree1.getSelection()[0],\n      path;\n    if (!node) {\n      Wb.warn('请选择变量目录。');\n      return;\n    }\n    path = app.getPath(node);\n    Wb.prompt({\n      title: '修改目录 - ' + path,\n      iconCls: 'folder_edit_icon',\n      items: [{\n        fieldLabel: '名称',\n        itemId: 'name',\n        value: node.data.text,\n        allowBlank: false\n      }],\n      handler: function(values, win) {\n        if (node.data.text == values.name) {\n          win.close();\n          return;\n        }\n        var parentNode = node.parentNode;\n        Wb.request({\n          url: 'm?xwl=dev/var/set-folder',\n          params: {\n            type: 'update',\n            name: node.data.text,\n            newName: values.name,\n            path: app.getPath(parentNode)\n          },\n          success: function(resp) {\n            Wb.update(node, {\n              text: values.name\n            });\n            parentNode.sort();\n            win.close();\n            app.list(app.getPath(node)); //路径改变重新加载\n          }\n        });\n      }\n    });\n  },\n  delFolder: function() {\n    var sel = app.tree1.getSelection()[0];\n    Wb.confirmDo(sel, function() {\n      Wb.request({\n        url: 'm?xwl=dev/var/set-folder',\n        params: {\n          type: 'delete',\n          path: app.getPath(sel)\n        },\n        success: function(resp) {\n          Wb.remove(app.tree1, sel);\n        }\n      });\n    }, 'text');\n  },\n  setVar: function(rec, isNew) {\n    var items, meta, cfg, field;\n    if (isNew) {\n      rec = {\n        data: {\n          meta: {}\n        }\n      };\n    } else {\n      if (!rec)\n        rec = app.grid1.getSelection()[0];\n      if (!rec) {\n        Wb.warn('请选择要编辑的变量。');\n        return;\n      }\n    }\n    field = {\n      fieldLabel: '变量值',\n      itemId: 'value',\n      value: rec.data.value\n    };\n    meta = rec.data.meta;\n    cfg = Ext.apply({}, meta);\n    delete cfg.type;\n    if (!isNew) {\n      switch (meta.type) {\n        case 'string':\n          field.xtype = 'textfield';\n          break;\n        case 'bool':\n          field.xtype = 'combo';\n          field.forceSelection = true;\n          field.store = [true, false];\n          field.allowBlank = false;\n          break;\n        case 'int':\n          field.xtype = 'numberfield';\n          field.allowDecimals = false;\n          field.allowBlank = false;\n          break;\n        case 'double':\n          field.xtype = 'numberfield';\n          field.decimalPrecision = 20;\n          field.allowBlank = false;\n          break;\n        case 'enum':\n          field.xtype = 'combo';\n          field.forceSelection = true;\n          field.store = meta.list;\n          field.allowBlank = false;\n          break;\n      }\n    }\n    items = [];\n    if (isNew) {\n      items.push({\n        fieldLabel: '名称',\n        itemId: 'name',\n        value: meta.type,\n        allowBlank: false,\n        store: ['string', 'bool', 'int', 'double', 'enum']\n      }, field, {\n        fieldLabel: '类型',\n        itemId: 'type',\n        xtype: 'combo',\n        value: meta.type,\n        allowBlank: false,\n        saveKeyname: 'sys.admin.var.type',\n        forceSelection: true,\n        store: ['string', 'bool', 'int', 'double', 'enum']\n      }, {\n        fieldLabel: '说明',\n        itemId: 'remark',\n        allowBlank: false,\n        value: rec.data.remark\n      }, {\n        fieldLabel: '配置',\n        itemId: 'config',\n        value: Ext.Object.isEmpty(cfg) ? '' : Wb.encode(cfg)\n      });\n    } else items = [field];\n    Wb.prompt({\n      title: isNew ? '添加变量 - ' + app.listPath : '设置变量 - ' + rec.data.name,\n      iconCls: isNew ? 'record_add_icon' : 'property_icon',\n      items: items,\n      handler: function(values, win) {\n        var config, type = values.type,\n          val = values.value;\n        switch (type) {\n          case 'string':\n            values.value = String(val);\n            break;\n          case 'int':\n            values.value = parseInt(val, 10) || 0;\n            break;\n          case 'bool':\n            values.value = Wb.parseBool(val);\n            break;\n          case 'double':\n            values.value = parseFloat(val) || 0;\n            break;\n        }\n        if (!isNew) {\n          values.type = meta.type;\n          values.name = rec.data.name;\n        }\n        try {\n          if (values.config) {\n            config = Wb.decode(values.config);\n            if (!Ext.isObject(config))\n              throw 'invalid json';\n          } else\n            config = null;\n        } catch (e) {\n          Wb.warn('配置项值不是有效的JSON值。', function() {\n            win.down('#config').focus(true, true);\n          });\n          return;\n        }\n        Wb.request({\n          url: 'm?xwl=dev/var/set-var',\n          params: Ext.apply({\n            isNew: isNew,\n            path: app.listPath\n          }, values),\n          success: function(resp) {\n            if (isNew) {\n              Wb.add(app.grid1, Wb.apply({\n                meta: Wb.apply({\n                  type: values.type\n                }, config)\n              }, values), 'add');\n            } else {\n              Wb.update(rec, values);\n            }\n            win.close();\n          }\n        });\n      }\n    });\n  },\n  delVar: function() {\n    var sels = app.grid1.getSelection();\n    Wb.confirmDo(sels, function() {\n      Wb.request({\n        url: 'm?xwl=dev/var/del-var',\n        params: {\n          path: app.listPath,\n          names: Wb.pluck(sels, 'name')\n        },\n        success: function(resp) {\n          Wb.remove(app.grid1, sels);\n        }\n      });\n    });\n  },\n  //显示指定路径目录下所有变量\n  list: function(path) {\n    var store = app.grid1.store;\n    app.listPath = path;\n    Wb.setTitle(app.grid1, path);\n    store.removeAll();\n    store.load({\n      params: {\n        path: path\n      }\n    });\n  }\n});"}}],"roles":{},"title":"变量配置","iconCls":"object_icon","inframe":false,"pageLink":""}