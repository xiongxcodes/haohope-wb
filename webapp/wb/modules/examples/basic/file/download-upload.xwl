{"hidden":false,"children":[{"configs":{"itemId":"module"},"expanded":true,"children":[{"configs":{"baseParams":"{abc:123}","itemId":"form1","width":"456","layoutType":"anchorForm"},"expanded":true,"children":[{"configs":{"allowBlank":"false","itemId":"file1","labelAlign":"right","fieldLabel":"上传文件"},"expanded":false,"children":[],"type":"file"},{"configs":{"itemId":"text1","labelAlign":"right","fieldLabel":"其他参数"},"expanded":false,"children":[],"type":"text"},{"configs":{"itemId":"container1","defaults":"{\n  margin: 5\n}","layoutType":"hboxPackMiddle"},"expanded":true,"children":[{"configs":{"itemId":"successBtn","text":"上传成功"},"expanded":false,"children":[],"type":"button","events":{"click":"//文件上传必须使用form控件,form控件可以嵌套在任何容器中，包括panel,window和viewport等。\nif (!Wb.verify(app.form1)) //验证值是否合法\n  return;\n//上传数据。此方法采用multipart/form-data编码上传数据，因此后台必须通过request.getAttribute(itemId)或app.get(itemId)方法获取指定控件数据\nWb.upload({\n  form: app.form1, //上传的表单控件，必选项\n  showProgress: true, //显示上传进度条\n  url: 'm?xwl=examples/basic/file/download-upload/process-upload&type=1',\n  //out:[panel1, grid1],以控件列表的方式上传指定控件值\n  //showMask: false,上传过程不显示mask\n  //message: '正在上传中...',\n  //mask: app.form1, //mask遮盖对象，未指定默认为全屏，前2秒透明遮盖。\n  params: { //以json对象表达的参数列表\n    foo: 'bar',\n    num: 123,\n    date: new Date()\n  },\n  //上传成功之后的回调方法\n  success: function(form, action, value) {\n    //value为服务器返回的值，action.response.responseText为服务器返回的原始值\n    Wb.info(value);\n  }\n});"}},{"configs":{"itemId":"failBtn","text":"上传失败"},"expanded":false,"children":[],"type":"button","events":{"click":"if (!Wb.verify(app.form1))\n  return;\n//此操作将触发后台异常，但前台不会重置，类似ajax效果。\nWb.upload({\n  form: app.form1,\n  //showError: false,屏蔽自动显示的错误信息\n  url: 'm?xwl=examples/basic/file/download-upload/process-upload&type=2'\n});"}},{"configs":{"itemId":"uploadDownloadBtn","text":"上传后下载"},"expanded":false,"children":[],"type":"button","events":{"click":"if (!Wb.verify(app.form1)) //验证值是否合法\n  return;\nWb.upload({\n  form: app.form1,\n  showMask: false, //如果上传后下载文件，必须设置为false，否则下载后无法移除mask。（因为下载不会触发回调）\n  url: 'download-at-app', //公共下载服务 m?xwl=sys/service/file/download-at-app\n  params: {\n    files: ['wb/images/site/wb.gif']\n  }\n});"}},{"configs":{"itemId":"downloadBtn","text":"直接下载"},"expanded":false,"children":[],"type":"button","events":{"click":"//该示例演示使用Wb.download方法下载文件，第一个参数为url，第二参数为参数对象，具体见Wb.download文档\n//使用普通编码下载的在后台使用request.getParameter获取参数，文件上传模式使用request.getAttribute获取参数，可以通一使用app.get获取参数\n//download模块指向m?xwl=sys/service/file/download-at-app，该模块为下载非受保护的文件\n//如果需要下载任意文件可以访问download模块（可以点搜索->搜索url捷径查找该模块），访问该模块需要具有对应权限\n//Wb.download('path/file.data'); //注意直接访问图片文件，js，css等格式的文件时，是否在客户被下载取决于应用服务器的设置\nWb.download('download-at-app', {\n  files: ['wb/images/site/wb.gif'], //应用目录下的相对路径\n  foo: 'bar'\n    //zip: true, //是否zip压缩，如果文件为多个或目录则自动设置为zip压缩\n    //downloadName: 'wb图片.zip' //下载的文件名，默认为原始文件名\n} /*,isUpload 指定是否是上传模式方式编码*/ );"}}],"type":"container"}],"type":"form"}],"type":"module"}],"roles":{},"title":"上传下载","iconCls":"","inframe":false,"pageLink":""}