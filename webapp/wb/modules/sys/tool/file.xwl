{"hidden":true,"children":[{"configs":{"serverScript":"if (!app.has('basePath')) {\n  var baseFile, basePath, sysFolderBase = String(Var.getString(\"sys.ide.sysFolderBase\"));\n  switch (sysFolderBase) {\n    case 'app':\n      baseFile = Base.path;\n      basePath = FileUtil.getPath(Base.path);\n      app.set('selWbFolder', true);\n      break;\n    case 'server':\n      baseFile = Base.path.getParentFile().getParentFile();\n      basePath = FileUtil.getPath(baseFile);\n      break;\n    default:\n      basePath = '';\n      app.set('pickupPath', FileUtil.getPath(Base.path));\n  }\n  app.set('basePath', basePath);\n  if (baseFile) {\n    app.set('rootConfig', Wb.encode({\n      text: baseFile.getName()\n    }));\n  }\n}\napp.set({\n  getFolderTreeUrl: app.get('getFolderTreeUrl') || 'm?xwl=sys/tool/file/get-files&mode=2',\n  getFilesUrl: app.get('getFilesUrl') || 'm?xwl=sys/tool/file/get-files&mode=3',\n  addFileUrl: app.get('addFileUrl') || 'm?xwl=sys/tool/file/add-file',\n  renameUrl: app.get('renameUrl') || 'm?xwl=sys/tool/file/rename',\n  deleteUrl: app.get('deleteUrl') || 'm?xwl=sys/tool/file/delete',\n  pasteUrl: app.get('pasteUrl') || 'm?xwl=sys/tool/file/paste',\n  getFileIconUrl: app.get('getFileIconUrl') || 'm?xwl=sys/tool/file/get-file-icon',\n  downloadUrl: app.get('downloadUrl') || 'download',\n  uploadUrl: app.get('uploadUrl') || 'upload'\n});","itemId":"module"},"expanded":true,"children":[{"configs":{"layout":"fit","border":"false","itemId":"viewport1"},"expanded":true,"children":[{"configs":{"layout":"border","border":"false","itemId":"panel1"},"expanded":true,"children":[{"configs":{"itemId":"dockedItems"},"expanded":true,"children":[{"configs":{"border":"false","itemId":"toolbar1","enableOverflow":"true"},"expanded":false,"children":[{"configs":{"autoSelect":"false","itemId":"address","pickList":"[]","flex":"1","anyMatch":"true"},"expanded":false,"children":[],"type":"combo","events":{"specialkey":"if (e.getKey() == e.ENTER) {\n  app.goBtn.fireEvent('click');\n}","select":"app.goBtn.fireEvent('click');"}},{"configs":{"itemId":"goBtn","overflowText":"转到","tooltip":"转到","iconCls":"go_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.selectPath(app.address.getValue(), function(succ) {\n  if (succ)\n    Wb.save(app.address);\n});"}}],"type":"toolbar"},{"configs":{"border":"false","itemId":"toolbar2","enableOverflow":"true"},"expanded":false,"children":[{"configs":{"itemId":"newFileBtn","bindModule":"{#addFileUrl#}","tooltip":"在当前文件夹创建一个空的文件","text":"新建文件","iconCls":"file_add_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.createFile(false);"}},{"configs":{"itemId":"newFolderBtn","bindModule":"{#addFileUrl#}","tooltip":"在当前文件夹创建一个空的文件夹","text":"新建文件夹","iconCls":"folder_add_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.createFile(true);"}},{"configs":{"itemId":"renameBtn","bindModule":"{#renameUrl#}","tooltip":"对选择的文件或文件夹重命名","text":"重命名","iconCls":"rename_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.rename();"}},{"configs":{"itemId":"executeBtn","hidden":"true","tooltip":"运行选择的文件","text":"运行","iconCls":"execute_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.execute();"}},{"configs":{"itemId":"editFileBtn","bindModule":"m?xwl=dev/ide/open","tooltip":"在线打开并编辑选择的文件","text":"编辑","iconCls":"file_edit_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.openFile();"}},{"configs":{"itemId":"permBtn","hidden":"true","tooltip":"设置目录或文件的访问权限","text":"权限","iconCls":"option_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.setPerm();"}},{"configs":{"itemId":"item0","text":"-"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"upBtn","tooltip":"返回上一级目录","text":"向上","iconCls":"upward_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"var node = app.fileTree.getSelection()[0];\nif (node && node.parentNode && (app.fileTree.rootVisible || node.getDepth() > 1))\n  app.fileTree.setSelection(node.parentNode);"}},{"configs":{"itemId":"backBtn","tooltip":"返回到上次目录","text":"后退","iconCls":"left_icon"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"forwardBtn","tooltip":"返回到后退前目录","text":"前进","iconCls":"right_icon"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"item1","text":"-"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"cutBtn","bindModule":"{#pasteUrl#}","tooltip":"把选择的文件或文件夹剪切到剪贴板","text":"剪切","iconCls":"cut_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.copyFiles(true);"}},{"configs":{"itemId":"copyBtn","bindModule":"{#pasteUrl#}","tooltip":"把选择的文件或文件夹复制到剪贴板","text":"复制","iconCls":"copy_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.copyFiles(false);"}},{"configs":{"itemId":"pasteBtn","handler":"app.pasteFiles","bindModule":"{#pasteUrl#}","tooltip":"在当前文件夹粘贴剪贴板中的文件或文件夹","text":"粘贴","iconCls":"paste_icon"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"deleteBtn","bindModule":"{#deleteUrl#}","tooltip":"删除选择的文件或文件夹","text":"删除","iconCls":"delete_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.deleteFiles();"}},{"configs":{"itemId":"item2","text":"-"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"exportBtn","xtype":"splitbutton","bindModule":"{#downloadUrl#}","tooltip":"导出选择的文件或目录","text":"导出","iconCls":"export_icon"},"expanded":false,"children":[{"configs":{"itemId":"zipExportBtn","tooltip":"对选择的文件或目录压缩后导出","text":"压缩并导出","iconCls":"file_zip_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.exportFile(true);"}}],"type":"item","events":{"click":"app.exportFile(false);"}},{"configs":{"itemId":"importBtn","xtype":"splitbutton","bindModule":"{#uploadUrl#}","tooltip":"导入文件到当前目录","text":"导入","iconCls":"import_icon"},"expanded":true,"children":[{"configs":{"itemId":"unzipExportBtn","tooltip":"导入文件并解压到当前目录","text":"导入并解压","iconCls":"file_zip_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"app.importFile(true);"}}],"type":"item","events":{"click":"app.importFile(false);"}},{"configs":{"itemId":"item3","text":"-"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"refreshBtn","tooltip":"刷新所有的文件和文件夹","text":"刷新","iconCls":"refresh_icon"},"expanded":false,"children":[],"type":"item","events":{"click":"Wb.reload(app.fileTree);"}}],"type":"toolbar"},{"configs":{"itemId":"statusBar","dock":"bottom"},"expanded":false,"children":[{"configs":{"itemId":"fileSizeLabel","xtype":"tbtext","text":"&nbsp;"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"item2","text":"->"},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"fileTotalLabel","xtype":"tbtext"},"expanded":false,"children":[],"type":"item"}],"type":"toolbar"}],"type":"array"},{"configs":{"itemId":"fileTree","split":"true","root":"app.rootConfig","width":"250","header":"false","region":"west","collapsible":"true","rootVisible":"!!app.rootConfig"},"expanded":true,"children":[{"configs":{"itemId":"store","normalName":"treeStore","autoLoad":"false","url":"@app.getFolderTreeUrl"},"expanded":false,"children":[],"type":"treestore","events":{"success":"if (app.selWbFolder) {\n  if (!app.fileTree.selFirstDone) {\n    var wbNode = app.fileTree.getRootNode().findChild('text', 'wb');\n    if (wbNode)\n      app.fileTree.setSelection(wbNode);\n    app.fileTree.selFirstDone = true;\n  }\n} else\n  Wb.selFirst(app.fileTree);\nif (!app.treeLoaded) {\n  app.treeLoaded = true;\n  if (app.treeLoadedCallback)\n    Ext.callback(app.treeLoadedCallback, app, [app.fileTree]);\n}","beforeload":"var path, node = operation.node;\nif (node.isRoot())\n  path = app.basePath;\nelse\n  path = app.getPath(node);\noperation.params.path = path;\noperation.params.forceShowFolder = app.forceShowFolder;"}}],"type":"tree","events":{"selectionchange":"var node = selected[0],\n  path = app.getPath(node);\nif (node) {\n  app.address.setValue(app.basePath ? path.substring(app.basePath.length + 1) : path);\n  app.gridStore.load({\n    params: {\n      path: path\n    }\n  });\n} else app.gridStore.removeAll();","afterrender":"tree.getRootNode().expand();"}},{"configs":{"itemId":"fileGrid","pagingBar":"false","region":"center","multiSelect":"true"},"expanded":true,"children":[{"configs":{"itemId":"store","remoteSort":"true","normalName":"gridStore","pageSize":"-1","sorters":"'text'","fields":"['text', 'leaf', 'icon', 'type', {\n  name: 'size',\n  useNull: true\n}, {\n  name: 'date',\n  dateFormat: Wb.dateFormat,\n  type: 'date'\n}]","url":"@app.getFilesUrl"},"expanded":false,"children":[],"type":"store","events":{"datachanged":"var folderCount = 0,\n  fileItems = [],\n  totalCount = app.gridStore.getCount();\napp.gridStore.each(function(rec) {\n  if (rec.data.leaf) {\n    fileItems.push({\n      field1: rec.data.text\n    });\n  } else {\n    folderCount++;\n  }\n});\napp.fileTotalLabel.setText('合计：' + Wb.format(totalCount, '#,##0') + '，文件夹：' + Wb.format(folderCount, '#,##0') +\n  '，文件：' + Wb.format(totalCount - folderCount, '#,##0'));\napp.fileNameText.store.loadData(fileItems);","success":"if (!app.fileNameText.firstFocused && app.fileNameText.isVisible()) {\n  app.fileNameText.firstFocused = true;\n  app.fileNameText.focus(false, true);\n}\napp.fileGrid.isLoaded = true;"}},{"configs":{"itemId":"bbar","hidden":"true","normalName":"fileNameBar"},"expanded":true,"children":[{"configs":{"itemId":"fileNameLbl","xtype":"tbtext","text":"文件名称："},"expanded":false,"children":[],"type":"item"},{"configs":{"itemId":"fileNameText","flex":"1","store":"[]","anyMatch":"true"},"expanded":false,"children":[],"type":"combo"}],"type":"toolbar"},{"configs":{"itemId":"columns"},"expanded":true,"children":[{"configs":{"itemId":"numCol","xtype":"rownumberer"},"expanded":false,"children":[],"type":"column"},{"configs":{"itemId":"nameCol","renderer":"var icon;\nif (record.get('leaf'))\n  icon = Wb.getUrlIcon(app.getFileIconUrl + '&file=' + record.get('icon'));\nelse icon = Wb.getGlyph('f114');\nreturn icon + value;","dataIndex":"text","width":"280","text":"名称"},"expanded":false,"children":[],"type":"column"},{"configs":{"itemId":"sizeCol","renderer":"if (record.data.leaf)\n  return Wb.getFileSize(value);\nelse\n  return '';","dataIndex":"size","width":"90","text":"大小","align":"right"},"expanded":false,"children":[],"type":"column"},{"configs":{"itemId":"typeCol","dataIndex":"type","width":"150","text":"类型"},"expanded":false,"children":[],"type":"column"},{"configs":{"itemId":"dateCol","dataIndex":"date","width":"130","text":"修改日期"},"expanded":false,"children":[],"type":"column"}],"type":"array"}],"type":"grid","events":{"tagEvents":"{\n  itemkeydown: Wb.mimicClick\n}","selectionchange":"if (selected.length > 1) {\n  var leafs = [];\n  app.fileSizeLabel.setText(Wb.format('选择 {0} 项', Wb.format(selected.length, '#,##0')));\n  Wb.each(selected, function(item) {\n    if (item.data.leaf)\n      leafs.push(item);\n  });\n  app.fileNameText.setValue(Wb.pluck(leafs, 'text').join('|'));\n} else if (selected.length == 1) {\n  var rec = selected[0];\n  if (rec.data.leaf)\n    app.fileNameText.setValue(rec.data.text);\n  app.fileSizeLabel.setText(rec && rec.data.leaf ? (Wb.getFileSize(rec.data.size) +\n    ' (' + Wb.format(rec.data.size, '#,###') + ' B)') : '&nbsp;');\n}","itemdblclick":"var node = app.fileTree.getSelection()[0];\nif (node) {\n  if (record.data.leaf) {\n    app.dblClickFileHandler();\n  } else {\n    node.expand(false, function() {\n      var child = node.findChild('text', record.get('text'));\n      if (child)\n        app.fileTree.setSelection(child);\n      else {\n        Wb.warn('未找到目录\u201c' + record.get('text') + '\u201d，请刷新后再试一次。');\n      }\n    });\n  }\n}"}}],"type":"panel"}],"type":"viewport","events":{"afterrender":"if (app.pickupPath)\n  app.address.store.add({\n    field1: app.pickupPath\n  });\nWb.setNavigate(app.fileTree, app.backBtn, app.forwardBtn);\napp.navKey = new Ext.KeyNav({\n  viewport: app.viewport1,\n  ignoreInputFields: true,\n  C: {\n    ctrl: true,\n    fn: function() {\n      app.copyFiles(false);\n    }\n  },\n  X: {\n    ctrl: true,\n    fn: function(e) {\n      app.copyFiles(true);\n    }\n  },\n  V: {\n    ctrl: true,\n    fn: app.pasteFiles\n  },\n  del: app.deleteFiles\n});\nWb.clearToolbar(app.toolbar2);"}}],"type":"module","events":{"initialize":"if (!contextOwner)\n  contextOwner = {};\nWb.apply(app, {\n  /** 获取目录树Url */\n  getFolderTreeUrl: '{#getFolderTreeUrl#}',\n  /** 获取文件列表Url */\n  getFilesUrl: '{#getFilesUrl#}',\n  /** 添加文件/目录Url */\n  addFileUrl: '{#addFileUrl#}',\n  /** 重命名Url */\n  renameUrl: '{#renameUrl#}',\n  /** 删除文件/目录Url */\n  deleteUrl: '{#deleteUrl#}',\n  /** 粘贴文件/目录Url */\n  pasteUrl: '{#pasteUrl#}',\n  /** 获得文件/目录图标Url */\n  getFileIconUrl: '{#getFileIconUrl#}',\n  /** 下载文件url */\n  downloadUrl: '{#downloadUrl#}',\n  /** 上传文件Url */\n  uploadUrl: '{#uploadUrl#}',\n  /** 根路径 */\n  basePath: '{#basePath#}',\n  /** 显示在地址栏下拉框中的路径 */\n  pickupPath: '{#pickupPath#}',\n  /** 是否默认选中wb目录 */\n  selWbFolder: Wb.parseBool('{#selWbFolder#}'),\n  /** 根节点配置 */\n  rootConfig: Wb.decode('{#rootConfig#}'),\n  /** 强制显示目录 */\n  forceShowFolder: Wb.parseBool('{#forceShowFolder#}'),\n  /**\n   * 获取文件列表中文件节点的绝对路径。\n   * @param {NodeInterface} node 节点对象，如果未指定节点则使用选择的节点。\n   * @param {Boolean} relPath 是否为相对路径。\n   * @return {String} 绝对路径。\n   */\n  getPath: function(node, relPath) {\n    if (!node || node.isRoot()) return relPath ? '' : app.basePath;\n    var path = Wb.getSection(node.getPath('text'), '/', 2);\n    if (!relPath)\n      path = app.basePath ? (app.basePath + '/' + path) : path;\n    return path.replace('//', '/');\n  },\n  openFile: function() {\n    var fileNames = app.getFileNames();\n    if (Wb.isEmpty(fileNames)) {\n      Wb.warn('请选择至少一个文件。');\n      return;\n    }\n    Wb.each(fileNames, function(fileName) {\n      var encodeFileName = encodeURIComponent(fileName).replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n      Wb.open({\n        url: 'text-editor?f=' + encodeFileName, //f仅用于标识url，使二次打开时自动定位到原文件tab\n        params: {\n          file: fileName\n        },\n        newTab: false,\n        title: Ext.String.ellipsis(Wb.getFilename(fileName), 20),\n        icon: app.getFileIconUrl + '&file=' + encodeFileName,\n        tooltip: fileName\n      });\n    });\n  },\n  selectPath: function(path, callback) {\n    path = '/' + app.fileTree.getRootNode().data.text + '/' + path.replace(/\\\\/g, '/');\n    if (Ext.String.endsWith(path, '/'))\n      path = path.slice(0, -1);\n    if (!app.basePath) {\n      path = path.split('/');\n      path[2] = path[2] + '/'; //系统根目录补上/，适用所有操作系统\n      app.fileTree.selectPath(path.join('\\n'), 'text', '\\n', callback);\n    } else app.fileTree.selectPath(path, 'text', '/', callback);\n  },\n  createFile: function(isDir) {\n    Wb.prompt({\n      title: isDir ? '新建文件夹' : '新建文件',\n      iconCls: isDir ? 'folder_add_icon' : 'file_add_icon',\n      items: {\n        itemId: 'name',\n        allowBlank: false,\n        fieldLabel: isDir ? '文件夹名称' : '文件名称'\n      },\n      handler: function(values, win) {\n        var node = app.fileTree.getSelection()[0];\n        if (node.isLeaf())\n          node = node.parentNode;\n        Wb.request({\n          url: app.addFileUrl,\n          params: {\n            isDir: isDir,\n            path: app.getPath(node),\n            name: values.name\n          },\n          success: function(resp) {\n            var loaded = node.data.loaded,\n              object = Wb.decode(resp.responseText);\n            if (isDir && node.isLoaded()) {\n              node.appendChild({\n                text: values.name,\n                children: []\n              }).commit();\n            }\n            Wb.add(app.fileGrid, Wb.apply(object, {\n              text: values.name,\n              leaf: !isDir\n            }));\n            win.close();\n          }\n        });\n      }\n    });\n  },\n  rename: function() {\n    var win, nameField, oldName, sels = app.fileGrid.getSelection(),\n      node = app.fileTree.getSelection()[0];\n    if (sels.length != 1) {\n      Wb.warn('请选择一个文件或目录。');\n      return;\n    }\n    sels = sels[0];\n    oldName = sels.data.text;\n    win = Wb.prompt({\n      title: '重命名 - ' + oldName,\n      focusControl: null,\n      iconCls: 'rename_icon',\n      items: {\n        itemId: 'name',\n        allowBlank: false,\n        fieldLabel: '新名称',\n        value: oldName\n      },\n      handler: function(values, win) {\n        if (oldName == values.name) {\n          win.close();\n          return;\n        }\n        Wb.request({\n          url: app.renameUrl,\n          params: {\n            path: app.getPath(node),\n            oldName: oldName,\n            newName: values.name\n          },\n          success: function(resp) {\n            var obj = Wb.decode(resp.responseText);\n            Wb.update(sels, {\n              text: values.name,\n              icon: obj.icon,\n              type: obj.type\n            });\n            if (!sels.data.leaf && node.isLoaded()) {\n              //更新tree上的名称\n              var sub = node.findChild('text', oldName);\n              sub.set('text', values.name);\n              sub.commit();\n            }\n            app.fileGrid.fireEvent('selectionchange', null, [sels]);\n            win.close();\n          }\n        });\n      }\n    });\n    nameField = win.down('#name');\n    nameField.focus(false, true, function() {\n      var pos = oldName.lastIndexOf('.');\n      if (pos == -1) pos = oldName.length;\n      nameField.selectText(0, pos);\n    });\n\n  },\n  deleteFiles: function() {\n    var node = app.fileTree.getSelection()[0],\n      files = app.fileGrid.getSelection();\n    Wb.confirmDo(files, function() {\n      Wb.request({\n        url: app.deleteUrl,\n        timeout: -1,\n        out: app.fileGrid,\n        params: {\n          path: app.getPath(node)\n        },\n        success: function(resp) {\n          Wb.remove(app.fileGrid);\n          if (node.isLoaded()) {\n            Wb.each(files, function(file) {\n              var child = node.findChild('text', file.data.text);\n              if (child) child.remove();\n            });\n          }\n        }\n      });\n    });\n  },\n  copyFiles: function(isCut) {\n    var fileNames = app.getFileNames(true),\n      node = app.fileTree.getSelection()[0];\n    if (!fileNames.length) {\n      Wb.warn('请选择至少一个文件/目录。');\n      return;\n    }\n    app.clipboard = fileNames;\n    if (isCut && node.isLoaded()) {\n      app.cutNodes = [];\n      Wb.each(fileNames, function(fileName) {\n        app.cutNodes.push(node.findChild('text', Wb.getFilename(fileName)));\n      });\n    }\n    app.isCut = isCut;\n  },\n  pasteFiles: function() {\n    if (!app.clipboard || !app.clipboard.length) {\n      Wb.warn('没有可以粘贴的文件/目录。');\n      return;\n    }\n    var dstNode = app.fileTree.getSelection()[0];\n    Wb.request({\n      url: app.pasteUrl,\n      timeout: -1,\n      params: {\n        isCut: app.isCut,\n        src: app.clipboard,\n        dst: app.getPath(dstNode)\n      },\n      success: function(resp) {\n        Ext.suspendLayouts();\n        if (app.isCut) {\n          app.clipboard = null;\n          Wb.each(app.cutNodes, function(node) {\n            if (node)\n              node.remove();\n          });\n        }\n        var index, oldItems = [],\n          items = Wb.decode(resp.responseText);\n        if (dstNode.isLoaded()) {\n          Wb.each(items, function(item) {\n            if (!item.leaf && !dstNode.findChild('text', item.text)) {\n              dstNode.appendChild({\n                text: item.text,\n                children: []\n              }).commit();\n            }\n          });\n        }\n        Wb.each(items, function(item) {\n          index = app.gridStore.findExact('text', item.text);\n          if (index != -1)\n            oldItems.push(app.gridStore.getAt(index));\n        });\n        app.gridStore.remove(oldItems);\n        Wb.add(app.fileGrid, items);\n        Ext.resumeLayouts(true);\n      }\n    });\n  },\n  /**\n   * 获得对话框选择的文件和目录列表。\n   * @param {Boolean} [includeFolder] 是否包含目录。默认为false。\n   * @param {Boolean} [relPath] 是否返回相对于根目录的相对路径。默认为false。\n   * @param {String} [extName] 文件的扩展名。如果获得的文件不是该扩展名，自动加上该扩展名。\n   * @param {Boolean [isDialog] 是否为对话框打开文件模式，如果为该模式文件列表从文件名输入框中获取。默认为false。\n   * @return {Array} 文件/目录名称列表。\n   */\n  getFileNames: function(includeFolder, relPath, extName, isDialog) {\n    function addExtName(filename) {\n      if (!extName)\n        return filename;\n      if (Ext.String.endsWith(filename.toLowerCase(), lowerExtName))\n        return filename;\n      else return filename + extName;\n    }\n    var files, lowerExtName = extName ? extName.toLowerCase() : null,\n      inputNames, fileNames, path;\n    path = app.getPath(app.fileTree.getSelection()[0], relPath);\n    if (!relPath || !Wb.isEmpty(path) && !Ext.String.endsWith(path, '/'))\n      path += '/';\n    if (isDialog) {\n      //文件打开对话框模式\n      inputNames = app.fileNameText.getValue();\n      if (inputNames)\n        files = inputNames.split('|');\n      else\n        files = [];\n    } else {\n      files = [];\n      Wb.each(app.fileGrid.getSelection(), function(rec) {\n        if (includeFolder || rec.data.leaf)\n          files.push(rec.data.text);\n      });\n    }\n    fileNames = [];\n    Wb.each(files, function(file) {\n      fileNames.push(path + addExtName(file));\n    });\n    return fileNames;\n  },\n  exportFile: function(zip) {\n    var files = app.getFileNames(true);\n    if (!files.length) {\n      Wb.warn('请选择至少一个需要导出的文件或目录。');\n      return;\n    }\n    Wb.download(app.downloadUrl, {\n      files: files,\n      zip: zip\n    });\n  },\n  importFile: function(unzip) {\n    var node = app.fileTree.getSelection()[0],\n      path = app.getPath(node);\n    Wb.run({\n      url: 'upload-dialog',\n      single: true,\n      success: function(scope) {\n        Wb.highlight(node);\n        scope.upload({\n          url: app.uploadUrl,\n          iconCls: 'import_icon',\n          title: (unzip ? '导入并解压 - ' : '导入 - ') + node.data.text,\n          params: {\n            path: path,\n            unzip: unzip\n          },\n          beforeUpload: unzip ? function() {\n            if (!Ext.String.endsWith(scope.file.getValue().toLowerCase(), '.zip')) {\n              Wb.warn('请选择一个 zip 格式的文件。');\n              return false;\n            }\n          } : null,\n          success: function() {\n            Wb.reload(app.fileTree);\n          }\n        });\n      }\n    });\n  }\n});\napp.dblClickFileHandler = app.execute = app.openFile;"}}],"roles":{},"title":"文件管理器","iconCls":"explorer_icon","inframe":false,"pageLink":""}