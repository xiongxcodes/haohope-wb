{"hidden":false,"children":[{"configs":{"itemId":"module"},"expanded":true,"children":[{"configs":{"quoted":"true","itemId":"text","js":"//常规的ajax请求，按Ctrl+4插入Wb.request模板\nWb.request({\n  url: 'm?xwl=admin/user/insert', //url路径，Ctrl+双击文件插入url，在配置项编辑器中可拖动文件或按Ctrl+拖动文件（多选）添加url\n  params: { //指定参数\n    str: 'bar',\n    num: 123,\n    object: {\n      item: 'value'\n    },\n    array: [1, 2, 'abc'],\n    date: new Date()\n  },\n  //showMask: false,//请求过程不显示mask\n  //message: '正在请求数据...',\n  //mask: app.panel1, //mask遮盖对象，默认为全屏，前1.5秒透明遮盖。\n  out: app.panel1, //输出panel1下所有控件值。out参数名称如果同params参数名称重名，params指定参数优先级高\n  success: function(resp) {\n    //resp.responseText为后台返回的文本\n    var obj = Wb.decode(resp.responseText); //如果后台返回json格式的文本，转换为json对象\n    Cs.log(obj); //在控制台显示对象，Cs.info/log/warn/error等都可使用\n  }\n});\n\n//加载表格、树、DataView，下拉框等关联的Store对象\n//可以通过app.grid1.store或app.myStore（通过设置normalName为myStore）来访问store对象\napp.store1.params = { //store.params参数在每次请求时都有效，除非手动清除。但优先级最低。\n  base1: 'baseParam'\n};\napp.store1.load({\n  out: app.panel1, //输出panel1下所有控件值。out参数名称如果同params参数名称重名，params指定参数优先级高\n  params: { //指定参数\n    foo: 'bar',\n    abc: 123\n  },\n  //showMask: false,//请求过程不显示mask\n  //message: '正在请求数据...',\n  //maskBindObject: true,//加载过程中遮盖store关联的对象（表格）\n  //showError: false,//屏蔽自动显示的错误信息\n  mask: app.panel1, //mask遮盖对象，未指定默认为全屏，前1.5秒透明遮盖。\n  callback: function(records, operation, success) { //回调函数，success为true表明成功加载\n    if (success)\n      Wb.info('Store成功加载完成。');\n  }\n});\n//在store的beforeload事件中通过operation.params={foo:'bar'}也可动态设置参数\n//store.load方法中的设置的参数，在下一次store.load()方法调用时将被覆盖，在下一次的store.reload方法调用时前次设置的参数仍然有效\n//store.reload和store.loadPage方法一样会自自动传递最后一次调用的所有参数（包括回调方法），store.load方法则不会(但store.param仍然传递）\napp.store1.reload({\n  callback: null //如果最后一次调用指定有回调函数，使用reload后仍将触发该回调函数，如果指定新的参数将覆盖原回调函数\n});\n//如果在store.reload方法中指定params参数，原参数会被覆盖，如果需要叠加参数可使用Wb.reload(store,{params:{},callback:fn});\n//BufferedStore的参数传递请使用store.params\n\n//Tree通常在节点展开时自动加载，指定Tree的root属性或设置rootVisible为false即可自动加载\n//如果要禁止TreeStore的自动加载，需要设置Tree的root{expanded:false}且设置TreeStore的autoLoad为false。\n//使用以下代码可重新加载选择的树节点\napp.fileTree.store.load({\n  node: app.fileTree.getSelection()[0]\n});\napp.treestore1.reload(); //重新加载最后一个加载的节点\nWb.reload(app.tree1); //重新加载根节点，并默认根据显示属性(text)展开当前路径，具体见Wb.reload方法说明。\n\n//使用传统表单提交的方式提交数据，向目标发起submit请求，目标默认为_blank，详见Wb.submit方法说明\nWb.submit('url', {\n  p1: 'foo',\n  p2: 123,\n  p3: new Date()\n});\n\n//上传文件，详见Wb.upload方法说明\nWb.upload({\n  form: app.form1,\n  url: 'url',\n  params: {\n    foo: 'bar'\n  },\n  success: function() {}\n});\n\n//下载文件，详见Wb.download方法说明\nWb.download('url', {\n  foo: 'bar'\n});"},"expanded":false,"children":[],"type":"string"},{"configs":{"layout":"fit","itemId":"viewport1"},"expanded":true,"children":[{"configs":{"itemId":"xwl1","file":"m?xwl=sys/tool/dev/script-editor","params":"{\n  readOnly: true\n}"},"expanded":false,"children":[],"type":"xwl"}],"type":"viewport","events":{"afterrender":"app.xwl1.setValue(\"{#text#}\");"}}],"type":"module"}],"roles":{},"title":"客户端请求","iconCls":"","inframe":false,"pageLink":""}