{"hidden":true,"children":[{"configs":{"itemId":"module","loginRequired":"false"},"expanded":true,"children":[{"configs":{"itemId":"viewport1"},"expanded":true,"children":[{"configs":{"itemId":"dataview1","tpl":"<div class=\"wizard_horizontal\">\n<ul class=\"wizard_steps\">\n<tpl for=\".\">\n<li class=\"wizard_step\">\n<a class=\"{type}\">\n<span class=\"step_no\">{index}<\/span>\n<span class=\"step_descr\">{text}<\/span>\n<\/a>\n<\/li>\n<\/tpl>\n<\/ul>\n<\/div>","itemSelector":"li.wizard_step"},"expanded":true,"children":[{"configs":{"itemId":"store","fields":"['index', 'text', 'type']"},"expanded":false,"children":[],"type":"store"}],"type":"dataview"}],"type":"viewport"}],"type":"module","events":{"initialize":"Wb.apply(app, {\n  /**\n   * 加载步骤数据。步骤数据由数组构成，数组的每一项为对象，对象的text为步骤的描述；type为类型，其有效值为：\n   *\n   *     done：表示已经完成步骤。\n   *     selected：表示当前步骤。\n   *     disabled：还未完成步骤。\n   *\n   * Example:\n   *\n   *     app.loadSteps([{text: '第一步',type: 'done'}, {text: '第二步',type: 'selected'}, {text: '第三步',type: 'disabled'}]);\n   *\n   * @param {Array} steps 步骤数据。\n   */\n  loadSteps: function(steps) {\n    var i = 1;\n    Wb.each(steps, function(step) {\n      if (step.index === undefined)\n        step.index = i++;\n    });\n    app.store.loadData(steps);\n  },\n  /**\n   * 绑定步骤数据到一个使用card布局的容器中。\n   *\n   * Example:\n   *\n   *     app.loadSteps(app.container1,['第一步','第二步','第三步']);\n   *\n   * @param {Container} container 使用card布局的容器。\n   * @param {Array} steps 步骤标题数组。\n   */\n  bindSteps: function(container, steps) {\n    app.bindContainer = container;\n    var type, index = 0,\n      afterCurrent = false,\n      layout = container.getLayout(),\n      items = [];\n    container.items.each(function(item) {\n      if (item == layout.activeItem) {\n        afterCurrent = true;\n        type = 'selected';\n      } else {\n        type = afterCurrent ? 'disabled' : 'done';\n      }\n      items.push({\n        text: steps[index++],\n        type: type\n      });\n      app.viewport1.mon(item, 'activate', app.onCardActive);\n    });\n    app.loadSteps(items);\n  },\n  /**\n   * 当应用于卡片容器时，卡片的激活事件。\n   */\n  onCardActive: function() {\n    var type, afterCurrent = false,\n      index = 0,\n      layout = app.bindContainer.getLayout();\n    Ext.suspendLayouts();\n    app.bindContainer.items.each(function(item) {\n      if (item == layout.activeItem) {\n        afterCurrent = true;\n        type = 'selected';\n      } else {\n        type = afterCurrent ? 'disabled' : 'done';\n      }\n      app.store.getAt(index++).set('type', type);\n    });\n    Ext.resumeLayouts(true);\n  }\n});"}}],"roles":{"default":1,"basic":1},"title":"步骤","iconCls":"","inframe":false,"pageLink":""}