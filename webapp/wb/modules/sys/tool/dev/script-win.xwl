{"hidden":true,"children":[{"configs":{"itemId":"module","loginRequired":"false"},"expanded":true,"children":[{"configs":{"layout":"fit","itemId":"win","resizable":"true","editWin":"true","width":"800","height":"460","maximizable":"true"},"expanded":true,"children":[{"configs":{"itemId":"panel1"},"expanded":true,"children":[],"type":"panel"}],"type":"window","events":{"afterrender":"app.cursorLabel = win.down('toolbar').insert(0, [{\n  xtype: 'label'\n}, '->'])[0];\nvar config, extConfig, panel = app.panel1;\npanel.update('<textarea><\/textarea>');\nconfig = {\n  lineNumbers: true,\n  theme: Wb.editTheme,\n  highlightSelectionMatches: {\n    showToken: /\\w/\n  },\n  matchBrackets: true,\n  extraKeys: {\n    'Ctrl-/': 'toggleComment',\n    'Shift-Ctrl-F': function(doc) {\n      if (doc.options.readOnly)\n        return;\n      var cursor = doc.getCursor(),\n        scroll = doc.getScrollInfo();\n      doc.autoFormatRange({\n        line: 0,\n        ch: 0\n      }, {\n        line: Number.MAX_VALUE,\n        ch: Number.MAX_VALUE\n      });\n      doc.scrollTo(scroll.left, scroll.top);\n      doc.setCursor(cursor);\n    }\n  }\n};\nswitch (app.type) {\n  case 'js':\n  case 'javascript':\n  case 'ss':\n  case 'serverscript':\n    extConfig = {\n      highlightSelectionMatches: {\n        showToken: /\\w/\n      },\n      mode: {\n        name: 'text/javascript',\n        globalVars: true\n      },\n      gutters: ['CodeMirror-lint-markers'],\n      lint: app.lint,\n      matchBrackets: true\n    };\n    break;\n  case 'css':\n    extConfig = {\n      mode: 'text/css',\n      gutters: ['CodeMirror-lint-markers'],\n      lint: app.lint,\n      matchBrackets: true\n    };\n    break;\n  case 'java':\n    extConfig = {\n      highlightSelectionMatches: {\n        showToken: /\\w/\n      },\n      mode: 'text/x-java',\n      matchBrackets: true\n    };\n    break;\n  case 'xml':\n    extConfig = {\n      mode: 'application/xml',\n      matchBrackets: true\n    };\n    break;\n  case 'html':\n  case 'htm':\n    extConfig = {\n      mode: 'htmlmixed',\n      matchBrackets: true\n    };\n    break;\n  case 'jsp':\n  case 'jspx':\n    extConfig = {\n      highlightSelectionMatches: {\n        showToken: /\\w/\n      },\n      mode: 'application/x-jsp',\n      matchBrackets: true\n    };\n    break;\n  case 'json':\n    extConfig = {\n      mode: 'application/json',\n      gutters: ['CodeMirror-lint-markers'],\n      matchBrackets: true\n    };\n    break;\n  case 'sql':\n    extConfig = {\n      mode: 'text/x-sql',\n      matchBrackets: true\n    };\n    break;\n  default:\n    extConfig = {\n      mode: 'text/plain'\n    };\n}\nExt.apply(config, extConfig);\napp.editor = CodeMirror.fromTextArea(panel.el.down('textarea', true), config);\npanel.mon(panel, 'resize', function(panel, width, height) {\n  if (app.editor && !panel.destroying) {\n    Ext.fly(app.editor.getScrollerElement()).setHeight(panel.body.getHeight());\n    app.editor.refresh();\n  }\n});\napp.editor.on('cursorActivity', function() {\n  var o = app.editor.getCursor();\n  app.cursorLabel.setText((o.line + 1) + ':' + (o.ch + 1));\n});","ok":"Ext.callback(app.callback, app, [app.editor.getValue(), win]);"}}],"type":"module","events":{"initialize":"Wb.apply(app, {\n  doShow: function() {\n    app.win.show();\n    app.win.setTitle(app.winTitle);\n    app.win.setIconCls(app.winIconCls);\n    app.editor.setValue(app.script || '');\n    setTimeout(function() {\n      app.editor.focus();\n    }, 10);\n  },\n  /**\n   * 显示JavaScript编辑器对话框。\n   * @param {Function} callback 点击对话框确定按钮时的回调事件，可使用参数value和win，表示编辑的脚本内容和窗口对象。\n   * @param {Object} [params] 可选参数。\n   * @param {String} [params.type] 脚本类型，默认为js。\n   * @param {String} [params.title] 窗口标题。\n   * @param {String} [params.iconCls] 窗口图标样式。\n   * @param {String} [params.script] 需要编辑的脚本。\n   * @param {String} [params.lint] 是否检查语法，默认为true。\n   */\n  show: function(callback, params) {\n    app.script = params.script;\n    app.type = (params.type || 'js').toLowerCase();\n    app.lint = params.lint === undefined ? true : params.lint;\n    app.callback = callback;\n    app.winTitle = params.title || '脚本编辑器';\n    app.winIconCls = params.iconCls || 'script_icon';\n    if (window.CodeMirror)\n      app.doShow();\n    else {\n      Wb.addLink(['wb/libs/cm/cmirror{#debugSuffix#}.css', 'wb/libs/cm/cmirror{#debugSuffix#}.js'],\n        app.doShow\n      );\n    }\n  },\n  focusEditor: function() {\n    setTimeout(function() {\n      app.editor.focus();\n    }, 50);\n  }\n});"}}],"roles":{},"title":"脚本窗口","iconCls":"","inframe":false,"pageLink":""}